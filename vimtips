*vimtips.txt*	For Vim version 7.3	Last change: 2017 August 24

To make sure the text formatting is displayed correctly/no formatting: >
    :set filetype=help
    :set syntax=off

The `<Leader>` or `<prefix>` is defined as >
    \
<

To open this window as a split, use `<prefix>?`, e.g.: >
    \?
<
Vim: Plugin installation ~
{{{
Inside vim session: >
     :PluginInstall
<
From bash: >
    vim +PluginInstall +qall
<
}}}

Vim: File broswer using `NERDTree` ~
{{{
Toggle the file browser: >
     \'
<
}}}

Vim: Windows splits ~
{{{
Open horizontal spit: >
    :split
<
Increase/decrease the size of vertical split: >
    :vertical resize +10
<
}}}

Vim: Buffers ~
{{{
Go to the next, previous or specified buffers: >
    gb
    gB
    :buffer [number]
<
Delete (close) current buffer: >
    bd
    :bd
<
}}}

Vim: Syntax check ~
{{{
Toggle Syntastic mode: >
    :SyntasticToggleMode
<
Check a file: >
    :SyntasticCheck
<
Reset a list of errors and turn off notifiers: >
    :SyntasticReset
<
}}}

Vim: Spell check ~
{{{
Turn spell check on: >
    :set spell [spelllang=en_us]
<
Turn it off: >
    :set nospell

Mobing to the next/previous misspelled word: >
    ]s
    [s
<
Open suggestions while on the word: >
    z=
<
If none of the suggestions work, to exis: >
    Enter
<
Adding a word to the vim dictionary: >
    zg
< 
}}}

Vim: Comments using `NERDCommenter` ~
{{{
Comment a selected block of code (visual mode): >
    \cc
<
Uncomment the selected block of code (visual mode): >
    \cu
<
Toggle the comment state of the selected lines based on the state of topmost
line: >
    \<SPACE>
<
Yank and comment: >
    \cy
<
Comment sexily: >
    \cs
<
}}}

Vim: Comments blocks ~
{{{   
<
Can be folded (closed) or unfolded (open) by using: >
    z-c
    z-o
<
}}}

Vim: Debugger Commands ~
{{{   
Launch the debugger in the same window, with a specified split, or in a tab: >
    :ConqueGDB [-d dir] [program]
    :ConqueGDBSplit
    :ConqueGDBVSplit
    :ConqueGDBTab
<
Mappings for the most used commands - run, continue, next, step, print under
cursor, toggle breakpoint on current line: >
    \r
    \c
    \n
    \s
    \p
    \b
<
Remove all the non-modified buffers that we opened by `gdb`: >
    :ConqueGdbDelete
<

}}}

Vim: Using EasyMotion plugin ~
{{{   
<
To start searching, use `<Prefix><Prefix>s` and then enter one character, e.g.: >
    \\s+a
    \\s+b
<
That will highlight all the words that contain `a` in first case and `b` in
the second case. In order to jump to the highlighted word, use the highlighted
character.

To search for a word: >
    \\s+w
<

}}}

Tmux: Save and reload a specific session (plugin used) ~
{{{
Using `tmux-resurrect` plugin, it's possible to save current session
(including the vim sessions and content) and then restore the full content
(panels, vim buffers, etc.) of the last saved session.

Save current session: >
    <Ctrl>a <Ctrl>s
<
Reload the last saved session: >
    <Ctrl>a <Ctrl>r
<
}}}

Tmux: sessions ~
{{{

Sessions are especially useful when lots of tmux panes were left while closing
the terminal, and later in time, we want to reopen the same panel
configuration. 

Create new sessions: >
    tmux new -s mySessionName

Delete certain session: >
    tmux kill-session -t mySessionName

Kill/delete all sessions, but current: >
    tmux kill-session -a [-t mySessionName]

Rename session: >
    <Ctrl>a $

Detach from session: >
    <Ctrl>a d

List all sessions: >
    tmux ls (list-sessions)
    <Ctrl>a s

Attach to last sessions: >
    tmux a [-t mySessionName]
    tmux attach

Move between the sessions: >
    <Ctrl>a (
    <Ctrl>a )
<
}}}

Tmux: windows ~
{{{
Create new window: >
    <Ctrl>a c
<
Rename current window: >
    <Ctrl>a ,
<
Go to next / previous window: >
    <Ctrl>a n
    <Ctrl>a p

Close current window: >
    <ctrl>a &
<
}}}

Tmux: panels ~
{{{
Split the screen in half vertically/horizontally: >
    <Ctrl>a |
    <Ctrl>a -
<
Jump between the open panes (in brackets: alternative way): >
    <Ctrl>a <up> (k)
    <Ctrl>a <down> (j)
    <Ctrl>a <left> (h)
    <Ctrl>a <right> (l)
    <Ctrl>a q <number>
<
Resize the panes: >
    <Ctrl>a K
    <Ctrl>a J
    <Ctrl>a H
    <Ctrl>a L
<
Working with the tmux terminal window: scrolling within the buffer and exiting
from the scrolling proceduew (in brackets: alternative way): >
    <Ctrl>a [
    <Esc> (q)
<
Toggle pane zoom, make the current pane fullscreen-like: >
    <Ctrl>a z
<
Close current pane: >
    <Ctrl>a x
<
}}}

Tmux: copy mode ~
{{{

In this mode, similar to scrolling mode `<Ctrl>a ]`, common vim keys apply,
e.g., `/` for search, `v` for selection and others.

Enter / exit copy mode: >
    <Ctrl>a [
    q
<
}}}

Tmux: misc ~
{{{

Display time / exit in current pane: >
    <Ctrl>a t
    q
<
Reload tmux config while being in a tmux session: >
    <Ctrl>a :source-file ~/.tmux.conf
    <Ctrl>a r
<
}}}
